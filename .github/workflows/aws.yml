name: Deploy to EC2 (Dev & Prod)

on:
  push:
    branches:
      - main

env:
  CONTAINER_NAME: static-resume-container
  APP_PORT: 80

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image tag
        id: set-tag
        run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Build and push image
        run: |
          docker build \
            -t ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ steps.set-tag.outputs.tag }} \
            .
          docker push ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ steps.set-tag.outputs.tag }}

  deploy-dev:
    name: Deploy to Dev EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Verify Dev Server IP
        run: |
          if [ -z "${{ secrets.DEV_SERVER_IP }}" ]; then
            echo "::error::DEV_SERVER_IP secret is missing"
            exit 1
          fi

      - name: Deploy to Dev EC2
        uses: appleboy/ssh-action@master
        with:
          host:     ${{ secrets.DEV_SERVER_IP }}
          username: ec2-user
          key:      ${{ secrets.SSH_PRIVATE_KEY }}
          port:     22
          script: |
            echo "=== Starting Dev Deployment to ${{ secrets.DEV_SERVER_IP }} ==="

            # Login to ECR
            aws ecr get-login-password \
              --region ${{ secrets.AWS_REGION }} | \
              sudo docker login \
                --username AWS \
                --password-stdin ${{ steps.login-ecr.outputs.registry }}

            # Deploy container
            sudo docker pull ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ needs.build-and-push.outputs.image_tag }}
            sudo docker stop ${{ env.CONTAINER_NAME }} || true
            sudo docker rm   ${{ env.CONTAINER_NAME }} || true
            sudo docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              -p ${{ env.APP_PORT }}:80 \
              -e NODE_ENV=development \
              --restart unless-stopped \
              ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ needs.build-and-push.outputs.image_tag }}

            echo "=== Dev Deployment Complete ==="

  deploy-prod:
    name: Deploy to Prod EC2
    needs:
      - build-and-push
      - deploy-dev
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Verify Prod Server IP
        run: |
          if [ -z "${{ secrets.PROD_SERVER_IP }}" ]; then
            echo "::error::PROD_SERVER_IP secret is missing"
            exit 1
          fi

      - name: Deploy to Prod EC2
        uses: appleboy/ssh-action@master
        with:
          host:     ${{ secrets.PROD_SERVER_IP }}
          username: ec2-user
          key:      ${{ secrets.SSH_PRIVATE_KEY }}
          port:     22
          script: |
            echo "=== Starting Prod Deployment to ${{ secrets.PROD_SERVER_IP }} ==="

            # Login to ECR
            aws ecr get-login-password \
              --region ${{ secrets.AWS_REGION }} | \
              sudo docker login \
                --username AWS \
                --password-stdin ${{ steps.login-ecr.outputs.registry }}

            # Deploy container
            sudo docker pull ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ needs.build-and-push.outputs.image_tag }}
            sudo docker stop ${{ env.CONTAINER_NAME }} || true
            sudo docker rm   ${{ env.CONTAINER_NAME }} || true
            sudo docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              -p ${{ env.APP_PORT }}:80 \
              -e NODE_ENV=production \
              --restart unless-stopped \
              ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ needs.build-and-push.outputs.image_tag }}

            echo "=== Prod Deployment Complete ==="
