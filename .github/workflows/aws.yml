name: Deploy to EC2 (Dev & Prod)

on:
  push:
    branches: [ "main" ]

env:
  CONTAINER_NAME: static-resume-container
  APP_PORT: 80

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.tag }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set image tag
      id: set-tag
      run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'

    - name: Build and push image
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ steps.set-tag.outputs.tag }} .
        docker push ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ steps.set-tag.outputs.tag }}

  deploy-dev:
    name: Deploy to Dev EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to Dev EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEV_SERVER_IP }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          # Install Docker if not present
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo yum install docker -y
            sudo systemctl enable docker
            sudo systemctl start docker
            sudo usermod -aG docker ec2-user
          fi

          # Install AWS CLI if not present
          if ! command -v aws &> /dev/null; then
            echo "Installing AWS CLI..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            rm -rf awscliv2.zip aws/
          fi

          # Configure AWS credentials
          mkdir -p ~/.aws
          cat > ~/.aws/config <<EOL
          [default]
          region = ${{ secrets.AWS_REGION }}
          EOL

          # Transfer deploy script
          echo "Transferring deployment script..."
          cat > deploy-container.sh <<'EOL'
          #!/bin/bash
          set -e

          IMAGE_URI=$1
          TAG=$2
          ENVIRONMENT=$3
          PORT=$4
          CONTAINER_NAME="static-resume-container"

          echo "=== Starting $ENVIRONMENT Deployment ==="
          echo "Pulling image: $IMAGE_URI:$TAG"
          sudo docker pull "$IMAGE_URI:$TAG"

          echo "Cleaning up previous container..."
          sudo docker stop "$CONTAINER_NAME" || true
          sudo docker rm "$CONTAINER_NAME" || true

          echo "Starting new container..."
          sudo docker run -d \
            --name "$CONTAINER_NAME" \
            -p "$PORT":80 \
            -e NODE_ENV="$ENVIRONMENT" \
            --restart unless-stopped \
            "$IMAGE_URI:$TAG"

          echo "=== $ENVIRONMENT Deployment Complete ==="
          EOL

          chmod +x deploy-container.sh

          # Login to ECR
          echo "Authenticating with ECR..."
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
            sudo docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

          # Execute deployment
          ./deploy-container.sh \
            "${{ steps.login-ecr.outputs.registry }}/static-resume" \
            "${{ needs.build-and-push.outputs.image_tag }}" \
            "development" \
            "${{ env.APP_PORT }}"

  deploy-prod:
    name: Deploy to Prod EC2
    needs: [build-and-push, deploy-dev]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to Prod EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_SERVER_IP }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          # [Same installation and setup as dev environment]
          
          # Login to ECR
          echo "Authenticating with ECR..."
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
            sudo docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

          # Execute deployment
          ./deploy-container.sh \
            "${{ steps.login-ecr.outputs.registry }}/static-resume" \
            "${{ needs.build-and-push.outputs.image_tag }}" \
            "production" \
            "${{ env.APP_PORT }}"