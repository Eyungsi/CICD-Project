name: Deploy to EC2 (Dev & Prod)

on:
  push:
    branches: [ "main" ]

env:
  CONTAINER_NAME: static-resume-container
  APP_PORT: 80
  HEALTH_CHECK_PATH: /  # Add your application's health check endpoint
  HEALTH_CHECK_TIMEOUT: 120  # Seconds to wait for app to become healthy

jobs:
  # [Previous build-and-push job remains exactly the same]

  deploy-dev:
    name: Deploy to Dev EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    # [Previous steps remain the same until the deploy script]
    
    - name: Deploy to Dev EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEV_SERVER_IP }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          echo "=== Starting Dev Deployment ==="
          
          # Login to ECR
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
            sudo docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
          
          # Stop and remove old container
          sudo docker stop ${{ env.CONTAINER_NAME }} || true
          sudo docker rm ${{ env.CONTAINER_NAME }} || true
          
          # Pull new image
          sudo docker pull ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ needs.build-and-push.outputs.image_tag }}
          
          # Run new container with health check
          sudo docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            -p ${{ env.APP_PORT }}:80 \
            -e NODE_ENV=development \
            --restart unless-stopped \
            ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ needs.build-and-push.outputs.image_tag }}
          
          echo "Waiting for application to become healthy..."
          timeout ${{ env.HEALTH_CHECK_TIMEOUT }} bash -c \
            'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:${{ env.APP_PORT }}${{ env.HEALTH_CHECK_PATH }})" != "200" ]]; do sleep 5; done' || \
            { echo "::error::Health check failed"; exit 1; }
          
          echo "=== Dev Deployment Complete ==="

  deploy-prod:
    name: Deploy to Prod EC2
    needs: [build-and-push, deploy-dev]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    # [Previous steps remain the same until the deploy script]
    
    - name: Deploy to Prod EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_SERVER_IP }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          echo "=== Starting Prod Deployment ==="
          
          # [Same deployment commands as dev environment]
          
          echo "Waiting for application to become healthy..."
          timeout ${{ env.HEALTH_CHECK_TIMEOUT }} bash -c \
            'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:${{ env.APP_PORT }}${{ env.HEALTH_CHECK_PATH }})" != "200" ]]; do sleep 5; done' || \
            { echo "::error::Health check failed"; exit 1; }
          
          echo "=== Prod Deployment Complete ==="