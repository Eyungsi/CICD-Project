name: Deploy to EC2 (Dev & Prod)

on:
  push:
   branches: ["main"]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: static-resume
  DEV_SERVER: ${{ secrets.DEV_SERVER_IP }}
  PROD_SERVER: ${{ secrets.PROD_SERVER_IP }}
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    outputs:
      image_uri: ${{ steps.build-image.outputs.image }}
      image_tag: ${{ steps.set-tag.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Docker image tag
        id: set-tag
        run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          IMAGE_TAG=${{ steps.set-tag.outputs.tag }}
          IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "image=$IMAGE_URI" >> $GITHUB_OUTPUT

  deploy-dev:
    name: Deploy to Dev EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ env.SSH_KEY }}

      - name: Deploy to Dev EC2 instance
        run: |
          TAG=${{ needs.build-and-push.outputs.image_tag }}
          IMAGE=${{ needs.build-and-push.outputs.image_uri }}

          ssh -o StrictHostKeyChecking=no ec2-user@${{ env.DEV_SERVER }} <<EOF
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            docker stop static-resume || true && docker rm static-resume || true
            docker pull $IMAGE
            docker run -d --name static-resume -p 80:80 $IMAGE
          EOF

  deploy-prod:
    name: Deploy to Prod EC2
    needs: [build-and-push, deploy-dev]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ env.SSH_KEY }}

      - name: Deploy to Prod EC2 instance
        run: |
          TAG=${{ needs.build-and-push.outputs.image_tag }}
          IMAGE=${{ needs.build-and-push.outputs.image_uri }}

          ssh -o StrictHostKeyChecking=no ec2-user@${{ env.PROD_SERVER }} <<EOF
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            docker stop static-resume || true && docker rm static-resume || true
            docker pull $IMAGE
            docker run -d --name static-resume -p 80:80 $IMAGE
          EOF
