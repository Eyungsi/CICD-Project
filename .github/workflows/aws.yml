name: Deploy to EC2 (Dev & Prod)

on:
  push:
    branches: [ "main" ]

env:
  CONTAINER_NAME: static-resume-container
  APP_PORT: 80

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.tag }}
      image_uri: ${{ steps.build-image.outputs.image_uri }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set image tag
      id: set-tag
      run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'

    - name: Build and push image
      id: build-image
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ steps.set-tag.outputs.tag }} .
        docker push ${{ steps.login-ecr.outputs.registry }}/static-resume:${{ steps.set-tag.outputs.tag }}
        echo "image_uri=${{ steps.login-ecr.outputs.registry }}/static-resume:${{ steps.set-tag.outputs.tag }}" >> $GITHUB_OUTPUT

  deploy-dev:
    name: Deploy to Dev EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to Dev EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEV_SERVER_IP }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script_timeout: 120
        script: |
          # Install prerequisites
          if ! command -v docker &> /dev/null; then
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl enable docker
            sudo systemctl start docker
            sudo usermod -aG docker ec2-user
          fi
          
          if ! command -v aws &> /dev/null; then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            rm -rf awscliv2.zip aws/
          fi
          
          # Login to ECR
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
            sudo docker login --username AWS --password-stdin ${{ needs.build-and-push.outputs.image_uri | split(':')[0] }}
          
          # Execute deployment script
          sudo ./deploy-container.sh \
            "${{ needs.build-and-push.outputs.image_uri }}" \
            "development" \
            "${{ env.APP_PORT }}"

  deploy-prod:
    name: Deploy to Prod EC2
    needs: [build-and-push, deploy-dev]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to Prod EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_SERVER_IP }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script_timeout: 120
        script: |
          # Same prerequisites as dev
          if ! command -v docker &> /dev/null; then
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl enable docker
            sudo systemctl start docker
            sudo usermod -aG docker ec2-user
          fi
          
          if ! command -v aws &> /dev/null; then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            rm -rf awscliv2.zip aws/
          fi
          
          # Login to ECR
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
            sudo docker login --username AWS --password-stdin ${{ needs.build-and-push.outputs.image_uri | split(':')[0] }}
          
          # Execute deployment script
          sudo ./deploy-container.sh \
            "${{ needs.build-and-push.outputs.image_uri }}" \
            "production" \
            "${{ env.APP_PORT }}"