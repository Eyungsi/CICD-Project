name: Deploy Portfolio to AWS EC2

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  SERVER_IP: ${{ secrets.PROD_SERVER_IP }}

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: List files (debug)
        run: |
          echo "Repository contents:"
          ls -la
          echo "HTML files:"
          ls *.html
      
      - name: Create deployment package
        run: |
          tar -czf deploy.tar.gz \
            --exclude='.git' \
            --exclude='.github' \
            assets/ \
            forms/ \
            *.html \
            *.txt
          
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: portfolio-build
          path: deploy.tar.gz
          retention-days: 1  # Automatically cleanup old artifacts

  deploy:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: portfolio-build
          path: .  # Downloads to current directory
          
      - name: Verify downloaded package
        run: |
          echo "Downloaded files:"
          ls -la
          [ -f "deploy.tar.gz" ] || (echo "Artifact missing!" && exit 1)
          
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Deploy to EC2
        run: |
          scp -o StrictHostKeyChecking=no \
              deploy.tar.gz \
              ec2-user@${{ env.SERVER_IP }}:/tmp/
              
          ssh -o StrictHostKeyChecking=no \
              ec2-user@${{ env.SERVER_IP }} << 'EOF'
          #!/bin/bash
          set -e
          DEPLOY_DIR="/var/www/portfolio"
          
          echo "Creating backup..."
          sudo mkdir -p /var/www/backups
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          [ -d "$DEPLOY_DIR" ] && sudo tar -czf /var/www/backups/portfolio-$TIMESTAMP.tar.gz -C $DEPLOY_DIR .
          
          echo "Deploying new version..."
          sudo mkdir -p $DEPLOY_DIR
          sudo tar -xzf /tmp/deploy.tar.gz -C $DEPLOY_DIR
          sudo chown -R nginx:nginx $DEPLOY_DIR
          
          echo "Deployment complete!"
          ls -la $DEPLOY_DIR
          EOF

      - name: Verify deployment
        run: |
          echo "Testing deployed application..."
          curl -sSf http://${{ env.SERVER_IP }} || \
            (echo "Deployment verification failed!" && exit 1)