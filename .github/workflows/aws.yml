name: Deploy to EC2 (Dev & Prod)

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: static-resume
  CONTAINER_NAME: static-resume-container
  HOST_PORT: 80
  CONTAINER_PORT: 8080

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    outputs:
      registry:   ${{ steps.login-ecr.outputs.registry }}
      image_tag:  ${{ steps.set-tag.outputs.tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image tag
        id: set-tag
        run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Build and push image
        run: |
          REG=${{ steps.login-ecr.outputs.registry }}
          TAG=${{ steps.set-tag.outputs.tag }}
          IMAGE_URI=$REG/${{ env.ECR_REPOSITORY }}:$TAG

          echo ">> Building & pushing $IMAGE_URI"
          docker build -t $IMAGE_URI .
          docker push     $IMAGE_URI

  deploy-dev:
    name: Deploy to Dev EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Deploy to Dev EC2
        uses: appleboy/ssh-action@master
        with:
          host:     ${{ secrets.DEV_SERVER_IP }}
          username: ec2-user
          key:      ${{ secrets.SSH_PRIVATE_KEY }}
          port:     22
          script: |
            REGISTRY=${{ needs.build-and-push.outputs.registry }}
            TAG=${{ needs.build-and-push.outputs.image_tag }}
            IMAGE_URI=$REGISTRY/${{ env.ECR_REPOSITORY }}:$TAG

            echo ">> REGISTRY   = $REGISTRY"
            echo ">> IMAGE_TAG  = $TAG"
            echo ">> IMAGE_URI  = $IMAGE_URI"

            sudo docker stop ${{ env.CONTAINER_NAME }} || true
            sudo docker rm   ${{ env.CONTAINER_NAME }} || true

            sudo docker pull $IMAGE_URI
            sudo docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} \
              --restart unless-stopped \
              $IMAGE_URI

  deploy-prod:
    name: Deploy to Prod EC2
    needs:
      - build-and-push
      - deploy-dev
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Deploy to Prod EC2
        uses: appleboy/ssh-action@master
        with:
          host:     ${{ secrets.PROD_SERVER_IP }}
          username: ec2-user
          key:      ${{ secrets.SSH_PRIVATE_KEY }}
          port:     22
          script: |
            REGISTRY=${{ needs.build-and-push.outputs.registry }}
            TAG=${{ needs.build-and-push.outputs.image_tag }}
            IMAGE_URI=$REGISTRY/${{ env.ECR_REPOSITORY }}:$TAG

            echo ">> REGISTRY   = $REGISTRY"
            echo ">> IMAGE_TAG  = $TAG"
            echo ">> IMAGE_URI  = $IMAGE_URI"

            sudo docker stop ${{ env.CONTAINER_NAME }} || true
            sudo docker rm   ${{ env.CONTAINER_NAME }} || true

            sudo docker pull $IMAGE_URI
            sudo docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} \
              --restart unless-stopped \
              $IMAGE_URI
